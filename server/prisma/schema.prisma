// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  password     String
  profilePhoto String?
  location     String?
  isPublic     Boolean  @default(true)
  skillsOffered Skill[] @relation("OfferedSkills")
  skillsWanted  Skill[] @relation("WantedSkills")
  availability String[]
  ratingsGiven   Rating[] @relation("Reviewer")
  ratingsReceived Rating[] @relation("Reviewee")
  swapRequests   SwapRequest[] @relation("Sender")
  swapsReceived  SwapRequest[] @relation("Receiver")
  createdAt    DateTime @default(now())
}

model Skill {
  id      String @id @default(cuid())
  name    String
  type    String // 'offered' or 'wanted'
  user    User   @relation(fields: [userId], references: [id], name: type == "offered" ? "OfferedSkills" : "WantedSkills")
  userId  String
}

model SwapRequest {
  id           String   @id @default(cuid())
  senderId     String
  receiverId   String
  skillOffered String
  skillWanted  String
  status       String   @default("pending") // pending, accepted, rejected
  createdAt    DateTime @default(now())
  sender       User     @relation("Sender", fields: [senderId], references: [id])
  receiver     User     @relation("Receiver", fields: [receiverId], references: [id])
}

model Rating {
  id         String   @id @default(cuid())
  reviewerId String
  revieweeId String
  comment    String?
  rating     Int      // 1 to 5
  reviewer   User     @relation("Reviewer", fields: [reviewerId], references: [id])
  reviewee   User     @relation("Reviewee", fields: [revieweeId], references: [id])
}
